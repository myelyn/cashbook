import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import dayjs from 'dayjs';

var isExtendDate = function isExtendDate(date) {
  if (date instanceof Date) {
    return date;
  }

  if (!date) {
    return '';
  }

  var isTime = /^\d{1,2}:\d{1,2}$/.test(date);

  if (isTime) {
    var _date$split = date.split(':'),
        _date$split2 = _slicedToArray(_date$split, 2),
        hour = _date$split2[0],
        minute = _date$split2[1];

    var today = new Date();
    today.setHours(+hour);
    today.setMinutes(+minute);
    return today;
  }

  return new Date(dayjs(date).format());
};

var parseState = function parseState(props) {
  var date = props.value && isExtendDate(props.value);
  var defaultDate = props.defaultValue && isExtendDate(props.defaultValue);
  var wheelDefault = props.wheelDefaultValue && isExtendDate(props.wheelDefaultValue);
  return {
    date: date || defaultDate,
    wheelDefault: wheelDefault
  };
};

export { isExtendDate, parseState };